@implements IAsyncDisposable
@namespace HeadlessBlazor
@using Microsoft.AspNetCore.Components.Rendering
@using Microsoft.JSInterop

@code {
    private DotNetObjectReference<HBOutsideClickBehavior>? dotNetObjRef;
    private IJSObjectReference? handlerRef;

    [Inject]
    private IJSRuntime JS { get; set; } = default!;

    [Parameter]
    public ElementReference Container { get; set; } = default!;

    [Parameter]
    public EventCallback OnClick { get; set; }

    public async ValueTask DisposeAsync()
    {
        if (handlerRef is not null)
        {
            await handlerRef.InvokeVoidAsync("dispose");
            await handlerRef.DisposeAsync();
            handlerRef = null;
        }

        dotNetObjRef?.Dispose();
    }

    [JSInvokable]
    public async void NotifyClickOutside()
    {
        await OnClick.InvokeAsync();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            dotNetObjRef ??= DotNetObjectReference.Create(this);
            var moduleName = nameof(HBOutsideClickBehavior);
            var module = await JS.InvokeAsync<IJSObjectReference>("import", $"./_content/HeadlessBlazor.OutsideClick/{moduleName}.razor.js");
            handlerRef = await module.InvokeAsync<IJSObjectReference>($"{moduleName}.createInstance", Container, dotNetObjRef);
            await module.DisposeAsync();
        }
    }
}