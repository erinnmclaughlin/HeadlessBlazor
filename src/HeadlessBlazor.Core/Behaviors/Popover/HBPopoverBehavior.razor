@implements IAsyncDisposable
@namespace HeadlessBlazor
@code {
    private IJSObjectReference? popover;

    [Inject]
    private IJSRuntime JS { get; set; } = default!;

    [Parameter]
    public HBPopoverAlignment? Alignment { get; set; }

    [Parameter, EditorRequired]
    public required ElementReference Anchor { get; set; }

    [Parameter, EditorRequired]
    public required ElementReference Content { get; set; }

    [Parameter]
    public HBPopoverSide? Side { get; set; }

    public async ValueTask DisposeAsync()
    {
        if (popover is not null)
        {
            await popover.InvokeVoidAsync("dispose");
            await popover.DisposeAsync();
            popover = null;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var moduleName = nameof(HBPopoverBehavior);
            var module = await JS.InvokeAsync<IJSObjectReference>("import", $"./_content/HeadlessBlazor.Core/Behaviors/Popover/{moduleName}.razor.js");
            popover = await module.InvokeAsync<IJSObjectReference>($"{moduleName}.createInstance", Anchor, Content, new HBPopoverOptions
            {
                Alignment = Alignment,
                Side = Side
            });
            await module.DisposeAsync();
        }
    }
}