@using HeadlessBlazor.Core.Themes
@inherits LayoutComponentBase
@inject HBThemeFactory ThemeFactory
@inject NavigationManager NavigationManager
@implements IDisposable

<HeadContent>
    @if (ThemeFactory.Theme == "Bootstrap")
    {
        <link rel="stylesheet" href="bootstrap/bootstrap.min.css" />
    }
    else if (ThemeFactory.Theme == "Tailwind")
    {
        <script src="https://cdn.tailwindcss.com"></script>
    }
</HeadContent>

<CascadingValue Value="ThemeFactory.GetTheme()">
    <div class="page">
        <nav class="navbar">
            <div class="container-fluid">
                <a class="navbar-brand" href="">
                    <img alt="Headless Blazor Logo" src="images/HeadlessBlazorLogo-white.svg" /> 
                    <span>Headless Blazor</span>
                </a>
            </div>
        </nav>
        <main>
            <article class="content px-4">
                <select @bind="ThemeFactory.Theme">
                    <option>Bootstrap</option>
                    <option>Tailwind</option>
                </select>
                @Body
            </article>
        </main>
    </div>
</CascadingValue>

@code {
    private HBTheme CurrentTheme { get; set; } = default!;

    public void Dispose()
    {
        ThemeFactory.ThemeChanged -= HandleThemeChanged;
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            ThemeFactory.ThemeChanged += HandleThemeChanged;

            if (string.IsNullOrEmpty(ThemeFactory.Theme))
                ThemeFactory.Theme = "Bootstrap";
        }
    }

    private void HandleThemeChanged(string theme)
    {
        Console.WriteLine($"Changing theme to '{theme}'");
        NavigationManager.NavigateTo(NavigationManager.Uri, true);
    }
}