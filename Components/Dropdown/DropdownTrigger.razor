@inherits DropdownComponentBase
@implements IDisposable

<button type="button" @attributes="UserAttributes" @onclick="HandleClick" @onmouseenter="HandleMouseEnter" @onkeydown="HandleKeyDown">
    @ChildContent
</button>

@code {
    public override Type Type => GetType();

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public bool CloseOnEscape { get; set; } = true;

    [Parameter]
    public bool TriggerOnHover { get; set; }

    protected override void OnAfterParametersSet()
    {
        if (TriggerOnHover)
        {
            Dropdown.Overlay.MouseEntered += HandleMouseEnterOverlay;
        }
    }

    private async Task HandleClick()
    {
        await Dropdown.Toggle();
    }

    private void HandleMouseEnter()
    {
        if (TriggerOnHover)
            InvokeAsync(async () => await Dropdown.Open());
    }

    private void HandleMouseEnterOverlay()
    {
        if (TriggerOnHover)
            InvokeAsync(async () => await Dropdown.Close());
    }

    private async Task HandleKeyDown(KeyboardEventArgs e)
    {
        if (e.Code == "Escape" && CloseOnEscape)
            await Dropdown.Close();
    }

    void IDisposable.Dispose()
    {
        GC.SuppressFinalize(this);
        Dropdown.Overlay.MouseEntered -= HandleMouseEnterOverlay;
    }
}